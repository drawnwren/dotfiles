---
- include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
  tags: nvm

- name: Install dependencies
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ nvm_dependencies }}"
  become: True
  tags: nvm

- name: "Register latest version of node if one wasn't provided"
  block:
    - shell: wget -qO- https://nodejs.org/dist/latest/ | sed -nE 's|.*>node-v(.*)\.pkg</a>.*|\1|p'
      register: latest_version

    - set_fact:
        node_version: "{{ latest_version.stdout }}"
  when:
    node_version is undefined
  tags:  nvm

- name: "Make the activation script executable"
  file:
    name: "{{ ansible_env.NVM_DIR }}/nvm.sh"
    mode: 0775
  tags: nvm

# very gross hack around nvm's aliasing script
- name: "Install node version" 
  command: bash -c {{ ansible_env.NVM_DIR }}/nvm.sh; nvm install {{ node_version }}
  register: nvm_install_result
  changed_when: "'is already installed.' not in nvm_install_result.stdout"
  tags: nvm

- name: "Check if {{ node_version }} is the default node version"
  command: "bash -c {{ ansible_env.NVM_DIR }}/nvm.sh; nvm ls | grep -e 'default -> {{ node_version }}'"
  register: nvm_check_default
  changed_when: False
  ignore_errors: True
  tags: nvm

- name: "Set default node version to {{ node_version }}"
  command: "bash -c {{ ansible_env.NVM_DIR }}/nvm.sh; nvm alias default {{ node_version }}"
  when: nvm_check_default|failed
  tags: nvm

- name: "Return activation script to its original state."
  file:
    name: "{{ ansible_env.NVM_DIR }}/nvm.sh"
    mode: 0665
  tags: nvm
